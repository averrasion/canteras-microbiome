{
  "hash": "3fa98c095b29efa4a84e0454ca2cdfcb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Overview\"\n---\n\n::: {.cell}\n\n:::\n\n## Introduction\n\nTarget genome region during polymerase chain reaction (PCR) divides the data into two major communities. These regions of rRNA are 16S and 18S, which correspond to prokaryotic and eukaryotic ribosomes, respectively.\n\n## Encounters and rarity\n\nAmplicon sequence variants (ASVs) represent the fundamental observational units of the database and can be mapped to individual taxa. As seen in @fig-encounters, encounters refer to the number of samples in which a taxon was found, ranging between a maximum of 47 encounters ---the maximum number of samples--- and 1. Encounters are indicative of taxon rarity: ASVs encountered many times are considered common while those encountered a few times are considered uncommon.\n\n::: {.cell}\n\n```{.r .cell-code}\nasvs |>\n  ggplot(aes(x = encounters)) +\n  geom_bar() +\n  facet_wrap(~ community, ncol = 1, scale = \"free_y\") +\n  scale_x_continuous(breaks = seq(1, 47, 2)) +\n  scale_y_log10() +\n  labs(x = \"Encounters\", y = \"ASVs (n)\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![Number of amplicon sequence variants by their encounter count. Vertical axis in logarithmic scale.](overview_files/figure-html/fig-encounters-1.png){#fig-encounters width=672}\n:::\n:::\n\nWe can easily calculate de probability of encountering each ASV by diving the number of encounters by the total number of repetitions, in this case we repeated the sampling 47 times. To further facilitate the analysis of ASV rarity, it was arbitrarily decided to bin the probabilities into 4 equally spaced ranges of 25 %. These ranges of rarity are 0--25 %, 25--50 %, 50--75 % and 75--100 %. As shown in @fig-rarity Important to note that, although ranges are equal in span, they are very asymmetrical in the number of ASVs they contain.\n\n::: {.cell}\n\n```{.r .cell-code}\nasvs |>\n  ggplot(aes(x = rarity)) +\n  geom_bar() +\n  facet_wrap(~ community) +\n  scale_y_log10() +\n  labs(x = \"Rarity (%)\", y = \"ASVs (n)\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![Number of amplicon sequence variants in each rarity range. Vertical axis in logarithmic scale.](overview_files/figure-html/fig-rarity-1.png){#fig-rarity width=672}\n:::\n:::\n\n## Reads and relative abundance\n\nThe number of reads each taxon has is directly related to its abundance within each particular sample. Relative abundance is preferred over reads because not all samples contained the same number of total ASV reads as shown in @fig-reads. This inconsistency can be misleading when comparing data from different samples.\n\n::: {.cell}\n\n```{.r .cell-code}\nasvs |> \n  ggplot(aes(x = rarity)) +\n  geom_bar(aes(weight = reads)) +\n  facet_wrap(~ community, scales = \"free_y\") +\n  labs(x = \"Rarity (%)\", y = \"Reads (n)\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![Bar plot of total number of reads for each rarity category.](overview_files/figure-html/fig-reads-1.png){#fig-reads width=672}\n:::\n:::\n\nRelative abundance is easily computed by dividing the number of reads of a certain taxon by the total ASV reads within the sample. @fig-violin shows that, overall, rarer taxa are less abundant. Note that, as stated above, there are far more data points in singular and recurring categories than in the ubiquitous category. The upper tails in rare distributions indicate exceptional cases where rare taxa become predominant in the sample. Samples dominated by rare taxa may indicate a community response to environmental changes, perhaps triggered by fecal contamination.\n\n::: {.cell}\n\n```{.r .cell-code}\nasvs |>\n  ggplot(aes(x = rarity, y = reads, fill = community)) +\n  geom_violin() +\n  scale_y_log10(labels = scales::label_number()) +\n  labs(x = \"Rarity (%)\", y = \"Reads (n)\", fill = \"\") +\n  theme_classic() +\n  theme(legend.position = \"inside\", legend.position.inside = c(.8, .1), legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Violin plot showing the distribution of taxon relative abundance by rarity. All data points are represented, with close to 10⁵ observations.](overview_files/figure-html/fig-violin-1.png){#fig-violin width=672}\n:::\n:::\n## Summary table\n\n::: {.cell}\n\n```{.r .cell-code}\nasvs |> \n  group_by(community, rarity) |> \n  summarize(n = n(), reads = sum(reads), .groups = \"drop_last\") |> \n  mutate(n_pct = n / sum(n) * 100, .after = n) |>\n  mutate(reads_pct = reads / sum(reads) * 100, .after = reads) |>\n  gt(rowname_col = \"rarity\", groupname_col = \"community\") |> \n  cols_label(\n    n         = md(\"**ASVs (n)**\"),\n    n_pct     = md(\"**ASVs (%)**\"),\n    reads     = md(\"**Reads (n)**\"),\n    reads_pct = md(\"**Reads (%)**\")\n  ) |>\n  fmt_number(columns = c(n_pct, reads_pct), decimals = 2) |> \n  summary_rows(columns = c(n, n_pct, reads, reads_pct), fns = list(\"TOTAL\" = ~ sum(.))) |> \n  tab_options(table.width = pct(100))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"eqlrtvsmid\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#eqlrtvsmid table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#eqlrtvsmid thead, #eqlrtvsmid tbody, #eqlrtvsmid tfoot, #eqlrtvsmid tr, #eqlrtvsmid td, #eqlrtvsmid th {\n  border-style: none;\n}\n\n#eqlrtvsmid p {\n  margin: 0;\n  padding: 0;\n}\n\n#eqlrtvsmid .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#eqlrtvsmid .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#eqlrtvsmid .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#eqlrtvsmid .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#eqlrtvsmid .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#eqlrtvsmid .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#eqlrtvsmid .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#eqlrtvsmid .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#eqlrtvsmid .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#eqlrtvsmid .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#eqlrtvsmid .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#eqlrtvsmid .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#eqlrtvsmid .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#eqlrtvsmid .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#eqlrtvsmid .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqlrtvsmid .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#eqlrtvsmid .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#eqlrtvsmid .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#eqlrtvsmid .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqlrtvsmid .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#eqlrtvsmid .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqlrtvsmid .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#eqlrtvsmid .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqlrtvsmid .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eqlrtvsmid .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqlrtvsmid .gt_left {\n  text-align: left;\n}\n\n#eqlrtvsmid .gt_center {\n  text-align: center;\n}\n\n#eqlrtvsmid .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#eqlrtvsmid .gt_font_normal {\n  font-weight: normal;\n}\n\n#eqlrtvsmid .gt_font_bold {\n  font-weight: bold;\n}\n\n#eqlrtvsmid .gt_font_italic {\n  font-style: italic;\n}\n\n#eqlrtvsmid .gt_super {\n  font-size: 65%;\n}\n\n#eqlrtvsmid .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#eqlrtvsmid .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#eqlrtvsmid .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#eqlrtvsmid .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#eqlrtvsmid .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#eqlrtvsmid .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#eqlrtvsmid .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#eqlrtvsmid .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#eqlrtvsmid div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n\"><span data-qmd-base64=\"PHN0cm9uZz5BU1ZzIChuKTwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>ASVs (n)</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n_pct\"><span data-qmd-base64=\"PHN0cm9uZz5BU1ZzICglKTwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>ASVs (%)</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"reads\"><span data-qmd-base64=\"PHN0cm9uZz5SZWFkcyAobik8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>Reads (n)</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"reads_pct\"><span data-qmd-base64=\"PHN0cm9uZz5SZWFkcyAoJSk8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>Reads (%)</strong></span></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"5\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Eukaryotic\">Eukaryotic</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_center gt_stub\">[0,25]</th>\n<td headers=\"Eukaryotic stub_1_1 n\" class=\"gt_row gt_right\">16008</td>\n<td headers=\"Eukaryotic stub_1_1 n_pct\" class=\"gt_row gt_right\">95.97</td>\n<td headers=\"Eukaryotic stub_1_1 reads\" class=\"gt_row gt_right\">686804</td>\n<td headers=\"Eukaryotic stub_1_1 reads_pct\" class=\"gt_row gt_right\">27.62</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_center gt_stub\">(25,50]</th>\n<td headers=\"Eukaryotic stub_1_2 n\" class=\"gt_row gt_right\">457</td>\n<td headers=\"Eukaryotic stub_1_2 n_pct\" class=\"gt_row gt_right\">2.74</td>\n<td headers=\"Eukaryotic stub_1_2 reads\" class=\"gt_row gt_right\">482875</td>\n<td headers=\"Eukaryotic stub_1_2 reads_pct\" class=\"gt_row gt_right\">19.42</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_center gt_stub\">(50,75]</th>\n<td headers=\"Eukaryotic stub_1_3 n\" class=\"gt_row gt_right\">139</td>\n<td headers=\"Eukaryotic stub_1_3 n_pct\" class=\"gt_row gt_right\">0.83</td>\n<td headers=\"Eukaryotic stub_1_3 reads\" class=\"gt_row gt_right\">439051</td>\n<td headers=\"Eukaryotic stub_1_3 reads_pct\" class=\"gt_row gt_right\">17.66</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_center gt_stub\">(75,100]</th>\n<td headers=\"Eukaryotic stub_1_4 n\" class=\"gt_row gt_right\">76</td>\n<td headers=\"Eukaryotic stub_1_4 n_pct\" class=\"gt_row gt_right\">0.46</td>\n<td headers=\"Eukaryotic stub_1_4 reads\" class=\"gt_row gt_right\">877584</td>\n<td headers=\"Eukaryotic stub_1_4 reads_pct\" class=\"gt_row gt_right\">35.30</td></tr>\n    <tr><th id=\"summary_stub_Eukaryotic_1\" scope=\"row\" class=\"gt_row gt_left gt_stub gt_summary_row gt_first_summary_row thick gt_last_summary_row\">TOTAL</th>\n<td headers=\"Eukaryotic summary_stub_Eukaryotic_1 n\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">16680</td>\n<td headers=\"Eukaryotic summary_stub_Eukaryotic_1 n_pct\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">100</td>\n<td headers=\"Eukaryotic summary_stub_Eukaryotic_1 reads\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">2486314</td>\n<td headers=\"Eukaryotic summary_stub_Eukaryotic_1 reads_pct\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">100</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"5\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Prokaryotic\">Prokaryotic</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_center gt_stub\">[0,25]</th>\n<td headers=\"Prokaryotic stub_1_5 n\" class=\"gt_row gt_right\">30032</td>\n<td headers=\"Prokaryotic stub_1_5 n_pct\" class=\"gt_row gt_right\">97.86</td>\n<td headers=\"Prokaryotic stub_1_5 reads\" class=\"gt_row gt_right\">312094</td>\n<td headers=\"Prokaryotic stub_1_5 reads_pct\" class=\"gt_row gt_right\">19.31</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_center gt_stub\">(25,50]</th>\n<td headers=\"Prokaryotic stub_1_6 n\" class=\"gt_row gt_right\">403</td>\n<td headers=\"Prokaryotic stub_1_6 n_pct\" class=\"gt_row gt_right\">1.31</td>\n<td headers=\"Prokaryotic stub_1_6 reads\" class=\"gt_row gt_right\">156475</td>\n<td headers=\"Prokaryotic stub_1_6 reads_pct\" class=\"gt_row gt_right\">9.68</td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_center gt_stub\">(50,75]</th>\n<td headers=\"Prokaryotic stub_1_7 n\" class=\"gt_row gt_right\">128</td>\n<td headers=\"Prokaryotic stub_1_7 n_pct\" class=\"gt_row gt_right\">0.42</td>\n<td headers=\"Prokaryotic stub_1_7 reads\" class=\"gt_row gt_right\">161679</td>\n<td headers=\"Prokaryotic stub_1_7 reads_pct\" class=\"gt_row gt_right\">10.00</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_center gt_stub\">(75,100]</th>\n<td headers=\"Prokaryotic stub_1_8 n\" class=\"gt_row gt_right\">127</td>\n<td headers=\"Prokaryotic stub_1_8 n_pct\" class=\"gt_row gt_right\">0.41</td>\n<td headers=\"Prokaryotic stub_1_8 reads\" class=\"gt_row gt_right\">986362</td>\n<td headers=\"Prokaryotic stub_1_8 reads_pct\" class=\"gt_row gt_right\">61.01</td></tr>\n    <tr><th id=\"summary_stub_Prokaryotic_1\" scope=\"row\" class=\"gt_row gt_left gt_stub gt_summary_row gt_first_summary_row thick gt_last_summary_row\">TOTAL</th>\n<td headers=\"Prokaryotic summary_stub_Prokaryotic_1 n\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">30690</td>\n<td headers=\"Prokaryotic summary_stub_Prokaryotic_1 n_pct\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">100</td>\n<td headers=\"Prokaryotic summary_stub_Prokaryotic_1 reads\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">1616610</td>\n<td headers=\"Prokaryotic summary_stub_Prokaryotic_1 reads_pct\" class=\"gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row\">100</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n### Singular taxa distribution\n\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"singular\") |> \n#   filter_analysis() |> \n#   count(community, sample, date, location, wt = p, name = \"p\") |> \n#   ggplot(aes(x = date, y = p, shape = community, color = community)) +\n#   geom_jitter() +\n#   scale_shape_discrete(labels = labels_location) +\n#   scale_color_discrete(labels = labels_location) +\n#   labs(x = \"\", y = \"relative abundance of singular taxa\", color = \"\", shape = \"\") +\n#   theme_classic() +\n#   theme(legend.position = \"inside\", legend.position.inside = c(.1, .9))\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"singular\") |> \n#   filter_analysis() |> \n#   count(community, sample, date, location, season, wt = p, name = \"p\") |> \n#   ggplot(aes(x = season, y = p, fill = community)) +\n#   geom_boxplot(outliers = F) +\n#   scale_x_discrete(labels = labels_season) +\n#   labs(x = \"\", y = \"relative abundance of ubiquitous taxa\") +\n#   theme_classic()\n```\n:::\n### Ubiquitous distribution\n\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"ubiquitous\") |> \n#   filter_analysis() |> \n#   count(community, sample, date, location, wt = p, name = \"p\") |> \n#   ggplot(aes(x = p, y = fct_rev(location), fill = community)) +\n#   geom_boxplot(outliers = F) +\n#   geom_jitter(aes(color = community), alpha = .3) +\n#   scale_y_discrete(labels = labels_location) +\n#   labs(x = \"relative abundance of ubiquitous taxa\", y = \"\", fill = \"\", color = \"\") +\n#   theme_classic()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"ubiquitous\") |> \n#   filter_analysis() |> \n#   count(community, sample, date, location, wt = p, name = \"p\") |> \n#   ggplot(aes(x = date, y = p, shape = community, color = community)) +\n#   geom_jitter() +\n#   scale_shape_discrete(labels = labels_location) +\n#   scale_color_discrete(labels = labels_location) +\n#   labs(x = \"\", y = \"relative abundance of ubiquitous taxa\", color = \"\", shape = \"\") +\n#   theme_classic()\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"ubiquitous\") |> \n#   filter_analysis() |> \n#   count(community, sample, date, location, season, wt = p, name = \"p\") |> \n#   ggplot(aes(x = season, y = p, fill = community)) +\n#   geom_boxplot(outliers = F) +\n#   geom_jitter(aes(color = community), alpha = .3) +\n#   scale_x_discrete(labels = labels_season) +\n#   labs(x = \"\", y = \"relative abundance of ubiquitous taxa\") +\n#   theme_classic()\n```\n:::\n\n### Recurring subdivision\n\nBecause there are so many they will be subdivided\n\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"recurring\") |> \n#   filter_analysis() |> \n#   count(\n#     community, sample, date, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = p, name = \"p\") |> \n#   ggplot(aes(x = p, y = fct_rev(location), fill = bins)) +\n#   geom_boxplot(outliers = F) +\n#   facet_wrap(~ community, scales = \"free_x\") +\n#   scale_y_discrete(labels = labels_location) +\n#   labs(x = \"relative abundance of recurring taxa\", y = \"\", fill = \"Encounter rate\") +\n#   theme_classic() +\n#   theme(legend.position = \"bottom\")\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(rarity == \"recurring\") |> \n#   filter_analysis() |> \n#   count(\n#     community, sample, date, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = p, name = \"p\") |> \n#   ggplot(aes(x = date, y = p, shape = bins, color = bins)) +\n#   geom_jitter() +\n#   facet_wrap(~ community) +\n#   labs(x = \"\", y = \"relative abundance of recurring taxa\", color = \"\", shape = \"\") +\n#   theme_classic()\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(community == \"Eukaryotic\") |> \n#   filter_analysis() |> \n#   count(\n#     sample, season, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = reads, name = \"reads\") |> \n#   ggplot(aes(x = bins, y = reads)) +\n#   geom_boxplot(outliers = F) +\n#   geom_jitter(alpha = .3, width = .3) +\n#   facet_grid(\n#     location ~ season,\n#     scales = \"free_y\",\n#     labeller = as_labeller(c(labels_location, labels_season))\n#     ) +\n#   labs(x = \"\", y = \"reads\", fill = \"Encounter rate\") +\n#   theme_classic() +\n#   theme(axis.text.x = element_text(angle = 90, vjust = .5))\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(community == \"Prokaryotic\") |> \n#   filter_analysis() |> \n#   count(\n#     sample, season, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = reads, name = \"reads\") |> \n#   ggplot(aes(x = bins, y = reads)) +\n#   geom_boxplot(outliers = F) +\n#   geom_jitter(alpha = .3, width = .3) +\n#   facet_grid(\n#     location ~ season,\n#     scales = \"free_y\",\n#     labeller = as_labeller(c(labels_location, labels_season))\n#     ) +\n#   labs(x = \"\", y = \"reads\", fill = \"Encounter rate\") +\n#   theme_classic() +\n#   theme(axis.text.x = element_text(angle = 90, vjust = .5))\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(community == \"Eukaryotic\") |> \n#   filter_analysis() |> \n#   count(\n#     sample, season, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = reads, name = \"reads\") |> \n#   ggplot(aes(x = sample, y = reads, fill = bins)) +\n#   geom_col(position = \"fill\") +\n#   facet_wrap(~ season, scales = \"free_x\", labeller = as_labeller(c(labels_location, labels_season))) +\n#   labs(x = \"\", y = \"reads\", fill = \"Encounter rate\") +\n#   theme_classic() +\n#   theme(axis.text.x = element_text(angle = 90, vjust = .5))\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(community == \"Prokaryotic\") |> \n#   filter_analysis() |> \n#   count(\n#     sample, season, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = reads, name = \"reads\") |> \n#   ggplot(aes(x = sample, y = reads, fill = bins)) +\n#   geom_col(position = \"fill\") +\n#   facet_wrap(~ season, scales = \"free_x\", labeller = as_labeller(c(labels_location, labels_season))) +\n#   labs(x = \"\", y = \"reads\", fill = \"Encounter rate\") +\n#   theme_classic() +\n#   theme(axis.text.x = element_text(angle = 90, vjust = .5))\n```\n:::\n::: {.cell}\n\n```{.r .cell-code}\n# taxa |> \n#   filter(community == \"Eukaryotic\") |> \n#   filter_analysis() |> \n#   count(\n#     sample, season, location,\n#     bins = encounter_rate |> cut_width(.25, center = .25/2),\n#     wt = reads, name = \"reads\") |> \n#   ggplot(aes(x = sample, y = reads, fill = bins)) +\n#   geom_col(position = \"fill\") +\n#   facet_wrap(~ location, scales = \"free_x\", labeller = as_labeller(c(labels_location, labels_season))) +\n#   labs(x = \"\", y = \"reads\", fill = \"Encounter rate\") +\n#   theme_classic() +\n#   theme(axis.text.x = element_text(angle = 90, vjust = .5))\n```\n:::",
    "supporting": [
      "overview_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}