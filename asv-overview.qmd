---
title: "Data Overview"
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(ggridges)
library(gt)
library(here)

source(here("_common.R"))

samples <-
  read_csv(here("data", "samples.csv"), col_types = cols(location = col_factor(levels = locations))) |> 
  mutate(date = make_datetime(year, month, day)) |> 
  mutate(season = make_season(date))

prokaryotes <- 
  read_csv(here("data", "prokaryotes.csv")) |>
  mutate_asv_rarity() |> 
  mutate(community = "Prokaryotic", .before = 1)

eukaryotes <- 
  read_csv(here("data", "eukaryotes.csv")) |>
  mutate_asv_rarity() |> 
  mutate(community = "Eukaryotic", .before = 1)

asvs <- 
  prokaryotes |> 
  bind_rows(eukaryotes) |>
  count(community, asv, encounters, rate, rarity, wt = reads, name = "reads")

diversities <- 
  prokaryotes |>  
  bind_rows(eukaryotes) |> 
  left_join(samples, by = join_by(sample)) |> 
  mutate(p = reads / max(reads), .by = sample, .after = reads) |> 
  group_by(community, sample, location, date, season) |> 
  summarize(shannon = - sum(p * log(p)), .groups = "drop")
```

## Introduction

Target genome region during polymerase chain reaction (PCR) divides the data into two major communities. These regions of rRNA are 16S and 18S, which correspond to prokaryotic and eukaryotic ribosomes, respectively.

## Encounters and rarity

Amplicon sequence variants (ASVs) represent the fundamental observational units of the database and can be mapped to individual taxa. As seen in @fig-encounters, encounters refer to the number of samples in which a taxon was found, ranging between a maximum of 47 encounters ---the maximum number of samples--- and 1. Encounters are indicative of taxon rarity: ASVs encountered many times are considered common while those encountered a few times are considered uncommon.

```{r}
#| label: fig-encounters
#| fig-cap: Number of amplicon sequence variants by their encounter count. Vertical axis in logarithmic scale.

asvs |>
  ggplot(aes(x = encounters)) +
  geom_bar() +
  facet_wrap(~ community, ncol = 1, scale = "free_y") +
  scale_x_continuous(breaks = seq(1, 47, 2)) +
  scale_y_log10() +
  labs(x = "Encounters", y = "ASVs (n)") +
  theme_classic()
```

We can easily calculate de probability of encountering each ASV by diving the number of encounters by the total number of repetitions, in this case we repeated the sampling 47 times. To further facilitate the analysis of ASV rarity, it was arbitrarily decided to bin the probabilities into 4 equally spaced ranges of 25 %. These ranges of rarity are 0--25 %, 25--50 %, 50--75 % and 75--100 %. As shown in @fig-rarity Important to note that, although ranges are equal in span, they are very asymmetrical in the number of ASVs they contain.

```{r}
#| label: fig-rarity
#| fig-cap: Number of amplicon sequence variants in each rarity range. Vertical axis in logarithmic scale.

asvs |>
  ggplot(aes(x = rarity)) +
  geom_bar() +
  facet_wrap(~ community) +
  labs(x = "Rarity (%)", y = "ASVs (n)") +
  theme_classic()
```

## Reads and relative abundance

The number of reads each taxon has is directly related to its abundance within each particular sample. Relative abundance is preferred over reads because not all samples contained the same number of total ASV reads as shown in @fig-reads. This inconsistency can be misleading when comparing data from different samples.

```{r}
#| label: fig-reads
#| fig-cap: Bar plot of total number of reads for each rarity category.

asvs |> 
  ggplot(aes(x = rarity)) +
  geom_bar(aes(weight = reads)) +
  facet_wrap(~ community, scales = "free_y") +
  labs(x = "Rarity (%)", y = "Reads (n)") +
  theme_classic()
```

Relative abundance is easily computed by dividing the number of reads of a certain taxon by the total ASV reads within the sample. @fig-violin shows that, overall, rarer taxa are less abundant. Note that, as stated above, there are far more data points in singular and recurring categories than in the ubiquitous category. The upper tails in rare distributions indicate exceptional cases where rare taxa become predominant in the sample. Samples dominated by rare taxa may indicate a community response to environmental changes, perhaps triggered by fecal contamination.

```{r}
#| label: fig-violin
#| fig-cap: Violin plot showing the distribution of taxon relative abundance by rarity. All data points are represented, with close to 10⁵ observations.

asvs |>
  ggplot(aes(x = rarity, y = reads)) +
  geom_violin(aes(fill = community), show.legend = F) +
  scale_y_log10(labels = scales::label_number()) +
  facet_wrap(~ community) +
  labs(x = "Rarity (%)", y = "Reads (n)") +
  theme_classic()
```

```{r}
asvs |>
  ggplot(aes(x = reads, y = rarity)) +
  geom_density_ridges(aes(fill = community), bandwidth = .1, alpha = .5, show.legend = F) +
  facet_wrap(~ community) +
  scale_x_log10(labels = scales::label_number()) +
  labs(x = "Reads (n)", y = "Rarity (%)") +
  theme_classic()
```


## Summary table

```{r}
asvs |> 
  group_by(community, rarity) |> 
  summarize(n = n(), reads = sum(reads), .groups = "drop_last") |> 
  mutate(n_pct = n / sum(n) * 100, .after = n) |>
  mutate(reads_pct = reads / sum(reads) * 100, .after = reads) |>
  gt(rowname_col = "rarity", groupname_col = "community") |> 
  cols_label(
    n         = md("**ASVs (n)**"),
    n_pct     = md("**ASVs (%)**"),
    reads     = md("**Reads (n)**"),
    reads_pct = md("**Reads (%)**")
  ) |>
  fmt_number(columns = c(n_pct, reads_pct), decimals = 2) |> 
  summary_rows(columns = c(n, reads), fns = list("TOTAL" = ~ sum(.))) |> 
  tab_options(table.width = pct(100))
```

## Shannon diversity index

Community diversity is an indicator of overall microbiome health and fitness. Therefore, relative low Shannon Index values signal community degrading processes, including wastewater intrusion. @fig-shannon-seasonal point again to our suspicion that the summer 2022 was affected by contamination. 

```{r}
#| label: fig-shannon-space
#| fig-cap: Box plots of Shannon diversity index spatial distribution

diversities |> 
  filter_analysis() |> 
  ggplot(aes(x = location, y = shannon)) +
  geom_boxplot(aes(fill = community), show.legend = F) +
  facet_wrap(~ community) +
  scale_x_discrete(labels = labels_location, name = NULL) +
  labs(y = "Shannon Index") +
  theme_classic()
```



```{r}
#| label: fig-shannon-season
#| fig-cap: Box plots of Shannon diversity index seasonal distribution.

diversities |> 
  filter_analysis() |> 
  ggplot(aes(x = season, y = shannon)) +
  geom_boxplot(aes(fill = community), show.legend = F) +
  facet_wrap(~ community) +
  scale_x_discrete(labels = labels_season, name = NULL) +
  labs(y = "Shannon Index") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 20, vjust = .5))
```



```{r}
# taxa |> 
#   filter(rarity == "singular") |> 
#   filter_analysis() |> 
#   count(community, sample, date, location, wt = p, name = "p") |> 
#   ggplot(aes(x = date, y = p, shape = community, color = community)) +
#   geom_jitter() +
#   scale_shape_discrete(labels = labels_location) +
#   scale_color_discrete(labels = labels_location) +
#   labs(x = "", y = "relative abundance of singular taxa", color = "", shape = "") +
#   theme_classic() +
#   theme(legend.position = "inside", legend.position.inside = c(.1, .9))
```
```{r}
# taxa |> 
#   filter(rarity == "singular") |> 
#   filter_analysis() |> 
#   count(community, sample, date, location, season, wt = p, name = "p") |> 
#   ggplot(aes(x = season, y = p, fill = community)) +
#   geom_boxplot(outliers = F) +
#   scale_x_discrete(labels = labels_season) +
#   labs(x = "", y = "relative abundance of ubiquitous taxa") +
#   theme_classic()
```
### Ubiquitous distribution

```{r}
# taxa |> 
#   filter(rarity == "ubiquitous") |> 
#   filter_analysis() |> 
#   count(community, sample, date, location, wt = p, name = "p") |> 
#   ggplot(aes(x = p, y = fct_rev(location), fill = community)) +
#   geom_boxplot(outliers = F) +
#   geom_jitter(aes(color = community), alpha = .3) +
#   scale_y_discrete(labels = labels_location) +
#   labs(x = "relative abundance of ubiquitous taxa", y = "", fill = "", color = "") +
#   theme_classic()
```

```{r}
# taxa |> 
#   filter(rarity == "ubiquitous") |> 
#   filter_analysis() |> 
#   count(community, sample, date, location, wt = p, name = "p") |> 
#   ggplot(aes(x = date, y = p, shape = community, color = community)) +
#   geom_jitter() +
#   scale_shape_discrete(labels = labels_location) +
#   scale_color_discrete(labels = labels_location) +
#   labs(x = "", y = "relative abundance of ubiquitous taxa", color = "", shape = "") +
#   theme_classic()
```
```{r}
# taxa |> 
#   filter(rarity == "ubiquitous") |> 
#   filter_analysis() |> 
#   count(community, sample, date, location, season, wt = p, name = "p") |> 
#   ggplot(aes(x = season, y = p, fill = community)) +
#   geom_boxplot(outliers = F) +
#   geom_jitter(aes(color = community), alpha = .3) +
#   scale_x_discrete(labels = labels_season) +
#   labs(x = "", y = "relative abundance of ubiquitous taxa") +
#   theme_classic()
```

```{r}
# taxa |> 
#   filter(rarity == "recurring") |> 
#   filter_analysis() |> 
#   count(
#     community, sample, date, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = p, name = "p") |> 
#   ggplot(aes(x = p, y = fct_rev(location), fill = bins)) +
#   geom_boxplot(outliers = F) +
#   facet_wrap(~ community, scales = "free_x") +
#   scale_y_discrete(labels = labels_location) +
#   labs(x = "relative abundance of recurring taxa", y = "", fill = "Encounter rate") +
#   theme_classic() +
#   theme(legend.position = "bottom")
```
```{r}
# taxa |> 
#   filter(rarity == "recurring") |> 
#   filter_analysis() |> 
#   count(
#     community, sample, date, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = p, name = "p") |> 
#   ggplot(aes(x = date, y = p, shape = bins, color = bins)) +
#   geom_jitter() +
#   facet_wrap(~ community) +
#   labs(x = "", y = "relative abundance of recurring taxa", color = "", shape = "") +
#   theme_classic()
```
```{r}
# taxa |> 
#   filter(community == "Eukaryotic") |> 
#   filter_analysis() |> 
#   count(
#     sample, season, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = reads, name = "reads") |> 
#   ggplot(aes(x = bins, y = reads)) +
#   geom_boxplot(outliers = F) +
#   geom_jitter(alpha = .3, width = .3) +
#   facet_grid(
#     location ~ season,
#     scales = "free_y",
#     labeller = as_labeller(c(labels_location, labels_season))
#     ) +
#   labs(x = "", y = "reads", fill = "Encounter rate") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = .5))
```
```{r}
# taxa |> 
#   filter(community == "Prokaryotic") |> 
#   filter_analysis() |> 
#   count(
#     sample, season, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = reads, name = "reads") |> 
#   ggplot(aes(x = bins, y = reads)) +
#   geom_boxplot(outliers = F) +
#   geom_jitter(alpha = .3, width = .3) +
#   facet_grid(
#     location ~ season,
#     scales = "free_y",
#     labeller = as_labeller(c(labels_location, labels_season))
#     ) +
#   labs(x = "", y = "reads", fill = "Encounter rate") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = .5))
```
```{r}
# taxa |> 
#   filter(community == "Eukaryotic") |> 
#   filter_analysis() |> 
#   count(
#     sample, season, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = reads, name = "reads") |> 
#   ggplot(aes(x = sample, y = reads, fill = bins)) +
#   geom_col(position = "fill") +
#   facet_wrap(~ season, scales = "free_x", labeller = as_labeller(c(labels_location, labels_season))) +
#   labs(x = "", y = "reads", fill = "Encounter rate") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = .5))
```
```{r}
# taxa |> 
#   filter(community == "Prokaryotic") |> 
#   filter_analysis() |> 
#   count(
#     sample, season, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = reads, name = "reads") |> 
#   ggplot(aes(x = sample, y = reads, fill = bins)) +
#   geom_col(position = "fill") +
#   facet_wrap(~ season, scales = "free_x", labeller = as_labeller(c(labels_location, labels_season))) +
#   labs(x = "", y = "reads", fill = "Encounter rate") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = .5))
```
```{r}
# taxa |> 
#   filter(community == "Eukaryotic") |> 
#   filter_analysis() |> 
#   count(
#     sample, season, location,
#     bins = encounter_rate |> cut_width(.25, center = .25/2),
#     wt = reads, name = "reads") |> 
#   ggplot(aes(x = sample, y = reads, fill = bins)) +
#   geom_col(position = "fill") +
#   facet_wrap(~ location, scales = "free_x", labeller = as_labeller(c(labels_location, labels_season))) +
#   labs(x = "", y = "reads", fill = "Encounter rate") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = .5))
```